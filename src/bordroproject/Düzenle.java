/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bordroproject;

import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pc
 */
public class Düzenle extends javax.swing.JFrame {

    /**
     * Creates new form Düzenle
     */
    ArrayList<Personel> düzenleArray;
    DefaultListModel dlm = new DefaultListModel();
    DefaultTableModel dtm = new DefaultTableModel();

    public Düzenle(ArrayList array) {
        initComponents();
        düzenleArray = array;
        dtm.setColumnCount(5);
        dtm.setColumnIdentifiers(new String[]{"Adı", "Soyadı", "Medeni Hali", "Çocuk Sayısı", "Brüt Maaş"});
        dtm.addRow(new String[]{"", "", "", "", ""});
        anlıkTablo.setModel(dtm);
        uyarıLabel.setVisible(false);
        ücretUyarı.setVisible(false);
        uyarıMedeni.setVisible(false);
        digerUyarı.setVisible(false);
        düzenListe.setModel(dlm);
        this.setLocationRelativeTo(null);

    }

    public Düzenle() {
        initComponents();
    }

    boolean desenKontrol(String desenMetni, String icindeDesenArananMetin) {

        Pattern desen = Pattern.compile(desenMetni);
        Matcher arama = desen.matcher(icindeDesenArananMetin);
        return arama.find();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        düzenListe = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        evliCheck = new javax.swing.JCheckBox();
        bekarCheck = new javax.swing.JCheckBox();
        cocukSayı = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        düzenAsgari = new javax.swing.JRadioButton();
        düzenDigerButon = new javax.swing.JRadioButton();
        düzenDiger = new javax.swing.JTextField();
        uyarıLabel = new javax.swing.JLabel();
        kaydetButon = new javax.swing.JButton();
        uyarıMedeni = new javax.swing.JLabel();
        ücretUyarı = new javax.swing.JLabel();
        digerUyarı = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        anlıkTablo = new javax.swing.JTable();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        düzenListe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                düzenListeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(düzenListe);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Düzenleme Yapılacak Personeli Seçiniz :");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Medeni Hali :");

        buttonGroup1.add(evliCheck);
        evliCheck.setText("Evli");
        evliCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evliCheckActionPerformed(evt);
            }
        });

        buttonGroup1.add(bekarCheck);
        bekarCheck.setText("Bekar");
        bekarCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bekarCheckActionPerformed(evt);
            }
        });

        cocukSayı.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Çocuk Sayısı :");

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Ücret :");

        buttonGroup2.add(düzenAsgari);
        düzenAsgari.setText("Asgari");
        düzenAsgari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                düzenAsgariActionPerformed(evt);
            }
        });

        buttonGroup2.add(düzenDigerButon);
        düzenDigerButon.setText("Diger");
        düzenDigerButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                düzenDigerButonActionPerformed(evt);
            }
        });

        uyarıLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        uyarıLabel.setText("* Alanları Uygun Şekilde Doldurunuz.");

        kaydetButon.setText("Degişiklikleri Kaydet");
        kaydetButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaydetButonActionPerformed(evt);
            }
        });

        uyarıMedeni.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        uyarıMedeni.setText("*");

        ücretUyarı.setText("*");

        digerUyarı.setText("*");

        anlıkTablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(anlıkTablo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(uyarıMedeni)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(evliCheck)
                                .addGap(28, 28, 28)
                                .addComponent(bekarCheck))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(düzenAsgari)
                                        .addGap(18, 18, 18)
                                        .addComponent(düzenDigerButon))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ücretUyarı)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4))))))
                    .addComponent(jLabel1)
                    .addComponent(uyarıLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(düzenDiger, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(digerUyarı)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(39, 39, 39)))
                .addComponent(cocukSayı, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(kaydetButon)
                        .addGap(311, 311, 311))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(uyarıMedeni)
                    .addComponent(jLabel3)
                    .addComponent(cocukSayı, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(evliCheck)
                            .addComponent(bekarCheck))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(ücretUyarı))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(düzenAsgari)
                            .addComponent(düzenDigerButon)
                            .addComponent(düzenDiger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(digerUyarı))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(kaydetButon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(uyarıLabel)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
            dlm.removeAllElements();
        for (int i = 0; i < düzenleArray.size(); i++) {
            boolean ekle = true;
            for (int j = 0; j < dlm.getSize(); j++) {
                if (((String) dlm.get(j)).contains(düzenleArray.get(i).getTür() + "  " + düzenleArray.get(i).getAdi() + "  "
                            + düzenleArray.get(i).getSoyAdi() + "  " + düzenleArray.get(i).getTcNo())) {
                    ekle = false;
                }
            }
            if (ekle) {
                if (düzenleArray.get(i).getAdi().equalsIgnoreCase("admin")) {
                    continue;
                } else {
                    dlm.addElement(düzenleArray.get(i).getTür() + "  " + düzenleArray.get(i).getAdi() + "  "
                            + düzenleArray.get(i).getSoyAdi() + "  " + düzenleArray.get(i).getTcNo());
                }
            }
        }
    }//GEN-LAST:event_formWindowActivated

    private void kaydetButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaydetButonActionPerformed
        // TODO add your handling code here:
        boolean degistir = true;
        if (!(evliCheck.isSelected() || bekarCheck.isSelected())) {
            uyarıMedeni.setVisible(true);
            uyarıLabel.setVisible(true);
            degistir = false;

        } else {
            uyarıMedeni.setVisible(false);
            uyarıLabel.setVisible(false);

        }
        if (!(düzenAsgari.isSelected() || düzenDigerButon.isSelected())) {
            ücretUyarı.setVisible(true);
            uyarıLabel.setVisible(true);
            degistir = false;
        } else {
            ücretUyarı.setVisible(false);
            uyarıLabel.setVisible(false);
        }
        if (düzenDigerButon.isSelected()) {
            if (desenKontrol("[^0-9]", düzenDiger.getText()) || düzenDiger.getText().equalsIgnoreCase("")) {
                digerUyarı.setVisible(true);
                uyarıLabel.setVisible(true);
                degistir = false;

            } else {
                uyarıLabel.setVisible(false);
                digerUyarı.setVisible(false);
            }
        }
        if (degistir) {
            Personel p = null;
            for (int i = 0; i < düzenleArray.size(); i++) {
                try {
                    if (düzenListe.getSelectedValue().equalsIgnoreCase(düzenleArray.get(i).getTür() + "  " + düzenleArray.get(i).getAdi() + "  "
                            + düzenleArray.get(i).getSoyAdi() + "  " + düzenleArray.get(i).getTcNo())) {
                        p = düzenleArray.get(i);
                    }
                } catch (NullPointerException e) {
                    uyarıLabel.setVisible(true);
                    uyarıLabel.setText("Listeden Seçim Yapınız.");

                }

            }
            SskKaynak kaynak = new SskKaynak();
            try {
                if (evliCheck.isSelected()) {
                    p.setMedeniHali("Evli");

                } else if (bekarCheck.isSelected()) {
                    p.setMedeniHali("Bekar");
                }
                if (düzenDigerButon.isSelected()) {
                    p.setBrütMaas(Double.parseDouble(düzenDiger.getText()));
                } else if (düzenAsgari.isSelected()) {
                    p.setBrütMaas(kaynak.getAsgariUcret_Ssk());
                }
                p.setCocukSayısı(cocukSayı.getSelectedIndex());
            } catch (Exception e) {
                uyarıLabel.setVisible(true);
                uyarıLabel.setText("Listeden Seçim Yapınız.");
            }

            düzenListe.clearSelection();
            for (int i = 0; i < anlıkTablo.getColumnCount(); i++) {
                anlıkTablo.setValueAt("", 0, i);
            }
            buttonGroup1.clearSelection();
            buttonGroup2.clearSelection();
            düzenDiger.setText("");
            cocukSayı.setSelectedIndex(0);
            JOptionPane.showConfirmDialog(rootPane, "Değişiklikler Başarıyla Kaydedildi!", "İşlem Başarılı", 2, JOptionPane.DEFAULT_OPTION);

        }
    }//GEN-LAST:event_kaydetButonActionPerformed

    private void bekarCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bekarCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bekarCheckActionPerformed

    private void evliCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evliCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_evliCheckActionPerformed

    private void düzenListeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_düzenListeMouseClicked
        // TODO add your handling code here:
        boolean goster = true;
        Personel p = null;

        for (int i = 0; i < düzenleArray.size(); i++) {
            try {
                if (düzenListe.getSelectedValue().equalsIgnoreCase(düzenleArray.get(i).getTür() + "  " + düzenleArray.get(i).getAdi() + "  "
                        + düzenleArray.get(i).getSoyAdi() + "  " + düzenleArray.get(i).getTcNo())) {
                    p = düzenleArray.get(i);
                    anlıkTablo.setValueAt(p.getAdi(), 0, 0);
                    anlıkTablo.setValueAt(p.getSoyAdi(), 0, 1);
                    anlıkTablo.setValueAt(p.getMedeniHali(), 0, 2);
                    anlıkTablo.setValueAt(String.valueOf(p.getCocukSayısı()), 0, 3);
                    anlıkTablo.setValueAt(String.valueOf(p.getBrütMaas()), 0, 4);
                }
            } catch (NullPointerException e) {
                uyarıLabel.setVisible(true);
                uyarıLabel.setText("Listeden Seçim Yapınız.");
            }
        }
    }//GEN-LAST:event_düzenListeMouseClicked

    private void düzenAsgariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_düzenAsgariActionPerformed
        // TODO add your handling code here:
        düzenDiger.setText("");
        düzenDiger.setEditable(false);
    }//GEN-LAST:event_düzenAsgariActionPerformed

    private void düzenDigerButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_düzenDigerButonActionPerformed
        // TODO add your handling code here:
        düzenDiger.setEditable(true);
    }//GEN-LAST:event_düzenDigerButonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Düzenle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Düzenle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Düzenle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Düzenle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Düzenle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable anlıkTablo;
    private javax.swing.JCheckBox bekarCheck;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cocukSayı;
    private javax.swing.JLabel digerUyarı;
    private javax.swing.JRadioButton düzenAsgari;
    private javax.swing.JTextField düzenDiger;
    private javax.swing.JRadioButton düzenDigerButon;
    private javax.swing.JList<String> düzenListe;
    private javax.swing.JCheckBox evliCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton kaydetButon;
    private javax.swing.JLabel uyarıLabel;
    private javax.swing.JLabel uyarıMedeni;
    private javax.swing.JLabel ücretUyarı;
    // End of variables declaration//GEN-END:variables
}
